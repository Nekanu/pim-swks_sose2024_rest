/*
 * PIM-SWKS SoSe2024 REST API
 * PIM-SWKS SoSe2024 REST API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Comment;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CommentsApi
 */
@Disabled
public class CommentsApiTest {

    private final CommentsApi api = new CommentsApi();

    /**
     * Create a new comment for a post
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createCommentForPostTest() throws ApiException {
        Long id = null;
        Comment comment = null;
        Comment response = api.createCommentForPost(id, comment);
        // TODO: test validations
    }

    /**
     * Delete a comment by ID for a post
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteCommentForPostByIdTest() throws ApiException {
        Long postId = null;
        Long commentId = null;
        Comment response = api.deleteCommentForPostById(postId, commentId);
        // TODO: test validations
    }

    /**
     * Returns a comment by ID for a post
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCommentForPostByIdTest() throws ApiException {
        Long postId = null;
        Long commentId = null;
        Comment response = api.getCommentForPostById(postId, commentId);
        // TODO: test validations
    }

    /**
     * Returns all comments for a post
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCommentsForPostTest() throws ApiException {
        Long id = null;
        Integer limit = null;
        List<Comment> response = api.getCommentsForPost(id, limit);
        // TODO: test validations
    }

    /**
     * Returns all comments authored by this user
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCommentsForUserTest() throws ApiException {
        Long id = null;
        List<Comment> response = api.getCommentsForUser(id);
        // TODO: test validations
    }

    /**
     * Update a comment by ID for a post
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateCommentForPostByIdTest() throws ApiException {
        Long postId = null;
        Long commentId = null;
        Comment comment = null;
        Comment response = api.updateCommentForPostById(postId, commentId, comment);
        // TODO: test validations
    }

}
